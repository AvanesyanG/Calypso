import express from "express";
import { getUserInfo, signup, login, updateProfile, addProfileImage, removeProfileImage, logout } from "../controllers/AuthController.js";
import { verifyToken } from "../middleware/AuthMiddleware.js";
import multer from "multer";
import { Buffer } from "buffer";

const authRoutes = express.Router();

// üõ† –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ multer:
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads/profiles");
  },
  filename: (req, file, cb) => {
    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–∑ latin1 ‚Üí utf8
    const decodedOriginalName = Buffer.from(file.originalname, 'latin1').toString('utf8');

    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç –æ–ø–∞—Å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤:
    const safeFileName = decodedOriginalName.replace(/[<>:"/\\|?*\x00-\x1F]/g, "_");

    cb(null, safeFileName);
  }
});

const upload = multer({ storage: storage });

authRoutes.post("/api/auth/signup", signup);
authRoutes.post("/api/auth/login", login);
authRoutes.get("/api/auth/user-info", verifyToken, getUserInfo);
authRoutes.post("/api/auth/update-profile", verifyToken, updateProfile);

// üõ† –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π upload:
authRoutes.post("/api/auth/add-profile-image", verifyToken, upload.single('profile-image'), addProfileImage);

authRoutes.delete("/api/auth/remove-profile-image", verifyToken, removeProfileImage);
authRoutes.post("/api/auth/logout", logout);

export default authRoutes;
